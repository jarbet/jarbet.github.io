---
title: "Imputing missing data"
description: "Introduction to methods for imputing missing values"
categories: [missing-data]
image: /posts/pics/missing.jpeg
execute:
  cache: true
date: 2025-01-04
author: Jaron Arbet
---

# Intro

[Missing data analysis: Making it work in the real world](https://www.annualreviews.org/doi/abs/10.1146/annurev.psych.58.110405.085530)

* Multiple imputation is the gold standard method for handling missing data but is computationally intensive.
* EM algorithm works well, but lack of general software.
* If doing likelihood-based regression modeling, then as long as you adjust for variables that influence missingness, results will not be biased due to missing data (although patients with missing values are dropped from the model, thus decreasing power).
    * Imputation likely still better due to improved power (i.e. all patients can be included).

# Single imputation

There are various scenarios where one wants to impute missing values a single time:

* When the goal is not statistical inference, but prediction 
* If you want to cluster your data before using `BoutrosLab.plotting.general::create.heatmap`
* If the goal is statistical inference, often people will still do single imputation despite multiple imputation being the gold standard.  Single imputation is so much easier/faster although more biased.


**R notes**:

* Set the seed beforehand
* All of these methods will throw errors if some features have 0 variance (i.e. they only take on 1 value).  Remove such features beforehand.
*  For `missForest/missMDA`: make sure rownames are set to patient.id beforehand 
*  For `impute::impute.knn`: make sure rownames are feature names and colnames are patient.id

```{r, warning = FALSE}
suppressPackageStartupMessages(library(missForest));
suppressPackageStartupMessages(library(missMDA));
suppressPackageStartupMessages(library(impute));
```

## Continuous

```{r}
set.seed(123);

data('geno', package = 'missMDA'); 

# impute.knn (features in rows, samples in cols)
# this is my preferred method for high dimensional continuous data since it is relatively fast
knn.imp <- impute::impute.knn(t(geno))$data;
knn.imp <- data.frame(t(knn.imp), check.names = FALSE);

# PCA (samples in rows, features in cols)
ncomp <- missMDA::estim_ncpPCA(geno, ncp.min = 0, ncp.max = 6);
pca.imp <- missMDA::imputePCA(geno, ncp = ncomp$ncp, scale = TRUE)$completeObs;

# missForest
mf.imp <- missForest::missForest(geno)$ximp;
```

## Categorical

```{r}
data('vnf', package = 'missMDA');

# missForest
mf.imp <- missForest::missForest(vnf)$ximp;

# MCA
#ncomp <- missMDA::estim_ncpMCA(vnf); # slow method to estimate number of components
mca.imp <- missMDA::imputeMCA(vnf, ncp = 3)$complete.obs;
```

## Mixed continuous/categorical

```{r}
data('snorena', package = 'missMDA'); 

# missForest
mf.imp <- missForest::missForest(snorena)$ximp;

# FAMD
#missMDA::estim_ncpFAMD(snorena); # slow method to estimate number of components
famd.imp <- missMDA::imputeFAMD(snorena, ncp = 3)$completeObs
```


# Multiple imputation

* As mentioned in the intro, multiple imputation is the gold standard for handling missing data because it accounts for uncertainty in the imputed values.
* Impute dataset multiple times to create *multiple imputed datasets*.  Analyze each dataset separately then pool the results for statistical inference.
* [Multiple imputation by chained equations: what is it and how does it work?](https://onlinelibrary.wiley.com/doi/abs/10.1002/mpr.329)
* [mice R package](https://cran.r-project.org/web/packages/mice/index.html)
    * [mice JSS article](https://www.jstatsoft.org/article/view/v045i03)


:::{.callout-note collapse="true"}
## Expand for Session Info
```{r, echo = FALSE}
sessionInfo();
```
:::